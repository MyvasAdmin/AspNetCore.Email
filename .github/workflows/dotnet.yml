# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: test

on:
  workflow_dispatch:
  push:
    branches: [ master ]
    paths-ignore:
      - "*.md"
  pull_request:
    branches: [ master ]
    paths-ignore:
      - "*.md"

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet: [ {version: '6.0.x', framework: 'net6.0'}, {version: '7.0.x', framework: 'net7.0'}, {version: '8.0.x', framework: 'net8.0'}, {version: '9.0.x', framework: 'net9.0'} ]
    env:
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
    
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
    
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet.version }}
          global-json-file: global.json
          cache: true
      - name: Display dotnet version
        run: dotnet --version
    
      - name: Install dependencies
        run: dotnet restore --locked-mode
      - name: Build
        run: dotnet build --no-restore

      - name: Test with the dotnet CLI
        run: dotnet test --framework ${{ matrix.dotnet.framework }} --no-build --verbosity normal --logger trx --results-directory "TestResults-${{ matrix.dotnet.framework }}"
      - name: Upload dotnet test results
        uses: actions/upload-artifact@v4
        with:
          name: dontet-results-${{ matrix.dotnet.framework }}
          path: TestResults-${{ matrix.dotnet.framework }}
        if: ${{ always() }}
      - run: echo "This job's status is ${{ job.status }}."
      